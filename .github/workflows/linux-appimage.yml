name: AppImage Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - ARCH: x64
            RUNS_ON: ubuntu-24.04
          - ARCH: arm64
            RUNS_ON: ubuntu-24.04-arm

    name: Build ${{ matrix.ARCH }}
    runs-on: ${{ matrix.RUNS_ON }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: master
        flutter-version: 3.27.4
    - run: flutter config --enable-linux-desktop
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
        clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev \
        libfuse2 keybinder-3.0 squashfs-tools python3-pip
    - name: Build flutter app
      run: flutter build linux --target-platform linux-${{ matrix.ARCH }}
    - name: Patch AppImageBuilder for ARM
      if: matrix.ARCH == 'arm64'
      run: |
        sed -i 's/x64/arm64/g' ./AppImageBuilder.yml
        sed -i 's/arch: x86_64/arch: arm64/' ./AppImageBuilder.yml
    - name: Build AppImage (x64)
      if: matrix.ARCH == 'x64'
      uses: docker://appimagecrafters/appimage-builder:1.1.0
      with:
        entrypoint: appimage-builder
        args: --recipe ./AppImageBuilder.yml --skip-test
    - name: Build AppImage (ARM)
      if: matrix.ARCH == 'arm64'
      run: |
        pip3 install appimage-builder
        PKG_PATH=$(pip show appimage-builder | grep 'Location:' | cut -d' ' -f2)
        find "$PKG_PATH" -name 'package.py' -exec sed -i \
          -e 's/version.parse(self.version)/version.parse(self.version.replace("ubuntu", "+ubuntu"))/g' \
          -e 's/version.parse(other.version)/version.parse(other.version.replace("ubuntu", "+ubuntu"))/g' \
          {} \;
        appimage-builder --recipe ./AppImageBuilder.yml --skip-test

    - name: Upload Artifact
      uses: marvinpinto/action-automatic-releases@latest
      with:
         automatic_release_tag: '2.0.0'
         prerelease: false
         draft: true
         files: './*.AppImage*'
         repo_token: ${{ secrets.GITHUB_TOKEN }}
